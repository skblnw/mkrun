* GENERATED BY CHARMM-GUI (http://www.charmm-gui.org) v3.2.2 on Mar, 28. 2021. JOBID=1691176822
* GENERATES IONS
*

DIMENS CHSIZE 5000000 MAXRES 3000000

! Read topology and parameter files
stream toppar.str

! Read PSF and Coordinates
open read unit 10 card name step1_pdbreader.psf
read psf  unit 10 card

open read unit 10 card name step1_pdbreader.crd
read coor unit 10 card

define PROT sele all end

! protein volume, calculation with a grid spacing of 0.5
coor orient
coor stat

open write unit 10 card name step2.2_ions_orient.crd
write coor unit 10 card

calc dcel = 0.5
calc xdim = int ( ( ?xmax - ?xmin + 5.0 ) / @dcel ) + 1
calc ydim = int ( ( ?ymax - ?ymin + 5.0 ) / @dcel ) + 1
calc zdim = int ( ( ?zmax - ?zmin + 5.0 ) / @dcel ) + 1
calc space = @xdim * @ydim * @zdim

scalar wmain = radius
scalar wmain add 1.4    ! use solvent accessible surface for molecular volume
scalar 1 = wmain
scalar 2 set 6.0
coor volume hole space @space sele .not. resname TIP3 end

set molvol = ?volume

! system volume from parameters for water box
stream step2.1_waterbox.prm

if @XTLtype .eq. TETRagonal   calc sysvol = @A * @B * @C
if @XTLtype .eq. CUBIc        calc sysvol = @A * @B * @C
if @XTLtype .eq. ORTHorhombic calc sysvol = @A * @B * @C
if @XTLtype .eq. MONOclinic   calc sysvol = @A * @B * @C * sin ( @beta * ?pi / 180.0 )
if @XTLtype .eq. HEXAgonal    calc sysvol = sqrt( 0.75 ) * @C * @A * @A
if @XTLtype .eq. OCTAhedral   calc sysvol = 4.0 * sqrt( 3.0 ) / 9 * @A * @A * @A
if @XTLtype .eq. RHDO         calc sysvol = sqrt( 0.5 ) * @A * @A * @A
if @XTLtype .eq. TRIClinic then
   calc cosa = cos ( @alpha * ?pi / 180.0 )
   calc cosb = cos ( @beta  * ?pi / 180.0 )
   calc cosg = cos ( @gamma * ?pi / 180.0 )
   calc sysvol = @A * @B * @C * sqrt ( 1.0 - @cosa * @cosa - @cosb * @cosb - @cosg * @cosg + 2.0 * @cosa * @cosb * @cosg )
endif
if @XTLtype .eq. RHOMbohedral then
   calc cosa = cos ( @alpha * ?pi / 180.0 )
   calc sysvol = @A * @A * @A * sqrt ( 1.0 - @cosa * sqrt ( 1.0 + 2.0 * @cosa ) )
endif

!
! conc   : concentration (M)
! volumn : ion accessible volume (Ang**3)
! npos   : number of positive ions
! nneg   : number of negative ions
!

calc conc   = 0.15
calc volumn = @sysvol - @molvol
set posval   = 1
set negval   = 1
calc ncharge = int( ?cgtot )
calc cgtot = ?cgtot

calc npos = 0
calc nneg = 0
if ncharge .lt. 0 calc npos = int( abs( @cgtot ) / @posval )
if ncharge .gt. 0 calc nneg = int( abs( @cgtot ) / @negval )

calc npos = @npos + int ( @conc * 6.021 * 0.0001 * @volumn ) * @negval
calc nneg = @nneg + int ( @conc * 6.021 * 0.0001 * @volumn ) * @posval

calc diff   = int ( @cgtot + @npos*@posval - @nneg*@negval )
label neutral
   if diff .gt. 0 calc nneg = @nneg + 1
   if diff .lt. 0 calc npos = @npos + 1
   calc diff   = int ( @cgtot + @npos*@posval - @nneg*@negval )
if diff .ne. 0 goto neutral

if npos .lt. 0 stop ! something wrong
if nneg .lt. 0 stop ! something wrong

!
! Randomly place the ions
!

!Generate POT
if npos .gt. 0 then
   read sequence POT @npos
   generate POT warn
endif

!Generate CLA
if nneg .gt. 0 then
   read sequence CLA @nneg
   generate CLA warn
endif

calc nion = @npos + @nneg
if nion .eq. 0 goto continue

define IONS sele segid POT .or. segid CLA end

! initial positions for all ions

calc xpos = @A / 2.0
calc ypos = @B / 2.0
calc zpos = @C / 2.0

coor set xdir @xpos ydir @ypos zdir @zpos select IONS end

!
!Images Setup [to place all atoms inside the box]
!

COOR CONVERT ALIGNED SYMMETRIC @A @B @C @alpha @beta @gamma

open read unit 10 card name crystal_image.str
CRYSTAL DEFINE @XTLtype @A @B @C @alpha @beta @gamma
CRYSTAL READ UNIT 10 CARD

!Image centering by residue
IMAGE BYATOM XCEN @xcen YCEN @ycen ZCEN @zcen

nbonds atom switch vatom vswitch -
       ctonnb 10.0 ctofnb 12.0 cutnb 15.0 cutim 15.0 -
       inbfrq -1 imgfrq -1 wmin 1.0 cdie eps 80.0
ENERGY

CONS FIX SELE .NOT. IONS END
SKIP ALL EXCL VDW ELEC
scalar wmain = charge

!
! Initial placement of ions
!

calc cntrand = 0

calc i   = 1
label doinit

    calc cntrand = @cntrand + 1
    if cntrand .gt. 100 stop ! ion placing may not work.. stop here

    calc j = @i
    set ion = POT

    if j .gt. @npos then
       set ion = CLA
       calc j  = @j - @npos
    endif

    define target select segid @ion .and. resid @j end

    calc xpos = ( @A - 9.0 ) * ( ?random - 0.5 )
    calc ypos = ( @B - 9.0 ) * ( ?random - 0.5 )
    calc zpos = ( @C - 9.0 ) * ( ?random - 0.5 )

    ! check if the ions are too close to solute
    coor set xdir @xpos  ydir @ypos  zdir @zpos select target end

    coor stat sele target end
    calc dcut = 5.0
    calc xmax = @xpos + @dcut
    calc ymax = @ypos + @dcut
    calc zmax = @zpos + @dcut
    calc xmin = @xpos - @dcut
    calc ymin = @ypos - @dcut
    calc zmin = @zpos - @dcut

    define JUNK sele .not. target .and. -
                     prop X .lt. @xmax .and. prop X .gt. @xmin .and. -
                     prop Y .lt. @ymax .and. prop Y .gt. @ymin .and. -
                     prop Z .lt. @zmax .and. prop Z .gt. @zmin  end

    if ?nsel .gt. 0 then
       coor dist cut 4.5 sele target end sele JUNK .and. .not. hydrogen end
       if ?npair .gt. 0 goto doinit
    endif

calc cntrand = 0
increase i by 1
if i .le. @nion goto doinit

!
! Monte Carlo (MC) simulations of ions
!

!Random number generation
RAND UNIF ISEED 1616911847

calc nmc = 2000

calc i   = 1
label domc

    if i .le. @nion then
       calc j = @i
    endif
    if i .gt. @nion then
       calc j = int( ?random * @nion ) + 1
    endif

    set ion = POT
    if j .gt. @npos then
       set ion = CLA
       calc j  = @j - @npos
    endif

    define target select segid @ion .and. resid @j end
    coor stat sele target end
    calc xsave  = ?xave
    calc ysave  = ?yave
    calc zsave  = ?zave

    calc xpos = @A * ( ?random - 0.5 )
    calc ypos = @B * ( ?random - 0.5 )
    calc zpos = @C * ( ?random - 0.5 )

    ! check if the ions are too close to solute
    coor set xdir @xpos  ydir @ypos  zdir @zpos select target end

    calc dcut = 12.0
    calc xmax = @xpos + @dcut
    calc ymax = @ypos + @dcut
    calc zmax = @zpos + @dcut
    calc xmin = @xpos - @dcut
    calc ymin = @ypos - @dcut
    calc zmin = @zpos - @dcut

    define JUNK sele .not. target .and. -
                     prop X .lt. @xmax .and. prop X .gt. @xmin .and. -
                     prop Y .lt. @ymax .and. prop Y .gt. @ymin .and. -
                     prop Z .lt. @zmax .and. prop Z .gt. @zmin  end

    if ?nsel .gt. 0 then
       coor dist cut 4.5 sele target end sele JUNK .and. .not. hydrogen end

       if ?npair .gt. 0 then
          coor set xdir @xsave  ydir @ysave  zdir @zsave select target end
          goto domc
       endif
    endif

    ! before the move
    coor set xdir @xsave  ydir @ysave  zdir @zsave select target end

    set pener = 99999.0
    energy
    if ?ener .lt. @pener calc pener = ?ener

    ! after the move
    coor set xdir @xpos  ydir @ypos  zdir @zpos select target end

    energy
    calc dener = ?ener - @pener
    calc boltz = exp ( - @dener / 0.59 )

    if xsave .eq. @a       goto next
    if dener .lt. 0.0      goto next
    if ?random .lt. @boltz goto next

    coor set xdir @xsave  ydir @ysave  zdir @zsave select target end

    label next

incr i by 1
if i le @nmc goto domc

ENERGY
COOR CONVERT SYMMETRIC ALIGNED @A @B @C @alpha @beta @gamma
CRYSTAL FREE

open read unit 10 card name step2.2_ions_orient.crd
read coor unit 10 card

open write unit 10 card name step2.2_ions.pdb
write coor unit 10 pdb
close unit 10

delete atom sele .not. IONS end

open write unit 10 card name step2.2_ions.crd
write coor unit 10 card
close unit 10

label continue

open write unit 10 card name step2.2_ions.prm
write title unit 10
* set npos = @npos ! Number of positive ions
* set nneg = @nneg ! Number of negative ions
* set posid = POT
* set negid = CLA
*

open write unit 10 card name step2.2_ions.str
write title unit 10
* read sequence POT @npos !Generate POT
* generate POT warn
* read sequence CLA @nneg    !Generate CLA
* generate CLA warn
*

stop

