* GENERATED BY CHARMM-GUI (http://www.charmm-gui.org) v1.8 on Mar, 02. 2017. JOBID=1488440802
* GENERATES ION CONFORMATION USING MONTE-CARLO SIMULATION
* 

DIMENS CHSIZE 3000000 MAXRES 3000000

! Read topology and parameter files
stream toppar.str

!Read the system information
stream step3_size.str
stream step4_components.str

! Read Lipids 
open read card unit 10 name step4_lipid_lipid.crd
read sequence coor card unit 10
generate MEMB setup warn first none last none 
open read unit 10 card name step4_lipid_lipid.crd
read coor unit 10 card resid

set ncharge = ?cgtot

!
! Concentration, Volume, and Number of Ions
!

set conc  =  0.18        ! M          
set zmemb =  20.0           ! ion exclusion membrane region
set val   = 1

IF BOXTYPE .ne. HEXA then
   calc volumn = @A * @B * ( @C - @zmemb*2 )  ! approximate ion accessible region
ENDIF

IF BOXTYPE .eq. HEXA THEN
   calc A = @A / cos ( 30.0 * ?pi / 180.0 )
   calc B = @B / cos ( 30.0 * ?pi / 180.0 )
   calc C = @C
   calc volumn = 3 / 8 * sqrt(3) * @A * @B * ( @C - @zmemb*2 )  ! approximate ion accessible region
ENDIF

calc nion   = @conc * 6.021 * 0.0001 * @volumn
calc npos   = int ( @nion - @ncharge / 2 / @val ) + 1
calc nneg   = @npos * @val + @ncharge

if npos .lt. 0 stop ! something wrong
if nneg .lt. 0 stop ! something wrong

!
! Randomly place the ions
!

!Generate POT
if npos .gt. 0 then
   read sequence POT @npos
   generate POT warn
endif

!Generate CLA
if nneg .gt. 0 then
   read sequence CLA @nneg
   generate CLA warn
endif

calc nion = @npos + @nneg
if nion .eq. 0 goto continue

! initial positions for all ions

calc xpos = @A / 2.0
calc ypos = @B / 2.0
calc zpos = @C / 2.0 + @zcen

coor set xdir @xpos ydir @ypos zdir @zpos select segid POT .or. segid CLA end
cons fix sele .not. ( segid POT .or. segid CLA ) end

!
!Energy Setup
!

!Note eps=80, truncation at 10 Angstrom
nbonds atom switch vatom vswitch -
       ctonnb 10.0 ctofnb 10.0 cutnb 11.0 cutim 11.0 -
       inbfrq -1 imgfrq -1 wmin 0.1 cdie eps 80.0

!
! initial placement of ions
!

calc i   = 1
label doinit

    if i .le. @nion then
       calc j = @i
    endif
    if i .gt. @nion then
       calc j = int( ?random * @nion ) + 1
    endif
    
    set ion = POT
    if j .gt. @npos then
       set ion = CLA
       calc j  = @j - @npos
    endif
    
    define target select segid @ion .and. resid @j end
    coor stat sele target end
    calc xsave  = ?xave
    calc ysave  = ?yave
    calc zsave  = ?zave
    
    calc xpos = @a * ( ?random - 0.5 )
    calc ypos = @b * ( ?random - 0.5 )
    calc zpos = @c * ( ?random - 0.5 ) + @zcen

    if zpos .gt. -15 if zpos .lt. 15 goto doinit
    
    ! check if the ions are too close to solute 
    coor set xdir @xpos  ydir @ypos  zdir @zpos select target end
    
    coor dist cut 4.5 sele target end -
                      sele ( .not. target ) .and. .not. hydrogen end
    
    if ?npair .gt. 0 then
       coor set xdir @xsave  ydir @ysave  zdir @zsave select target end
       goto doinit
    endif

increase i by 1
if i .le. @nion goto doinit

!
! Monte Carlo (MC) simulations of ions
! 

!Random number generation
RAND UNIF ISEED 1488441091

calc nmc = 2000

calc i   = 1
label domc 

    if i .le. @nion then
       calc j = @i
    endif       
    if i .gt. @nion then
       calc j = int( ?random * @nion ) + 1
    endif

    set ion = POT
    if j .gt. @npos then
       set ion = CLA
       calc j  = @j - @npos
    endif

    define target select segid @ion .and. resid @j end 
    coor stat sele target end
    calc xsave  = ?xave
    calc ysave  = ?yave
    calc zsave  = ?zave

    label doagain1
        calc zpos = @C * ( ?random - 0.5 ) + @zcen
        if zpos .lt. @zmemb if zpos .gt. -@zmemb goto doagain1

        calc xpos = @A * ( ?random - 0.5 )
    
        label doagain2
            calc ypos = @B * ( ?random - 0.5 )

            if BOXTYPE .eq. HEXA then
                calc compx   = -0.25 * @A
                calc compy11 =  sqrt(3.0) * 0.25 * @A
                calc compy12 = -@compy11
                calc compy21 =  sqrt(3.0) * ( @xpos + 0.5 * @A )
                calc compy22 = -@compy21

                if @xpos .ge. @compx if @ypos .gt. @compy11 goto doagain2
                if @xpos .ge. @compx if @ypos .lt. @compy12 goto doagain2
                if @xpos .lt. @compx if @ypos .gt. @compy21 goto doagain2
                if @xpos .lt. @compx if @ypos .lt. @compy22 goto doagain2

                calc compx   =  0.25 * @A
                calc compy11 =  @compy11
                calc compy12 = -@compy11
                calc compy21 = sqrt(3.0) * ( -@xpos + 0.5 * @A )
                calc compy22 = -@compy21

                if @xpos .le. @compx if @ypos .gt. @compy11 goto doagain2
                if @xpos .le. @compx if @ypos .lt. @compy12 goto doagain2
                if @xpos .gt. @compx if @ypos .gt. @compy21 goto doagain2
                if @xpos .gt. @compx if @ypos .lt. @compy22 goto doagain2
            endif 

            interaction sele target end sele .not. target end
            set pener = 99999.0
            if ?ener .lt. @pener calc pener = ?ener

            coor set xdir @xpos  ydir @ypos  zdir @zpos select target end
            update

            interaction sele target end sele .not. target end
            calc dener = ?ener - @pener
            calc boltz = exp ( - @dener / 0.59 )

            if xsave .eq. @a       goto next
            if dener .lt. 0.0      goto next
            if ?random .lt. @boltz goto next

            coor set xdir @xsave  ydir @ysave  zdir @zsave select target end
            update

            label next

            incr i by 1
            if i le @nmc goto domc

open write unit 10 card name step4.3_ion.pdb
write coor unit 10 pdb 
close unit 10

delete atom sele .not. ( segid POT .or. segid CLA ) end

open write unit 10 card name step4.3_pos.crd
write coor unit 10 card sele segid POT end
close unit 10

if npos .gt. 0 delete atom sele segid POT end

open write unit 10 card name step4.3_neg.crd
write coor unit 10 card sele segid CLA end
close unit 10

label continue 

open write unit 10 card name step4.3_pos.prm
write title unit 10
* set npos = @npos ! Number of positive ions
* set nneg = @nneg ! Number of negative ions
* set posid = POT
* set negid = CLA 
*

stop